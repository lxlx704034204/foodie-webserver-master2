<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.foodie.web.dao.WorksCommentMapper" >
  <resultMap id="BaseResultMap" type="com.foodie.web.model.WorksComment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="worksId" property="worksId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="VARCHAR" />
    <result column="userId" property="userId" jdbcType="VARCHAR" />
    <result column="parentId" property="parentId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, worksId, content, createTime, userId, parentId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from worksComment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from worksComment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.foodie.web.model.WorksComment" >
    insert into worksComment (id, worksId, content, 
      createTime, userId, parentId
      )
    values (#{id,jdbcType=VARCHAR}, #{worksId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.foodie.web.model.WorksComment" >
    insert into worksComment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="worksId != null" >
        worksId,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="worksId != null" >
        #{worksId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.foodie.web.model.WorksComment" >
    update worksComment
    <set >
      <if test="worksId != null" >
        worksId = #{worksId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.foodie.web.model.WorksComment" >
    update worksComment
    set worksId = #{worksId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=VARCHAR},
      parentId = #{parentId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>